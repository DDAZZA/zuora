Configuration System
  [ ] System options via Zuora.configure (:ztax, :customer_acceptance)

Object Modeling
  [ ] Spec coverage for all objects and mock responses (confirm modeling)
  [ ] Attempt to map error messages to specific attributes instead of Base (no keys are provided)

Internals
  [ ] Consider providing to_xml for objects as there are several complex nesting strategies related to subscriptions
  [ ] Restructure Zuora::Attributes module to be less invasive
  [ ] Read only attribute methods should probably be protected, however they are used on initialization from remote sources.
  [ ] Handle HTTP errors gracefully in API module
  [ ] Reconsider Zuora::Fault implementation
  [ ] Create a "ZOQL" module that will generate queries and use this intead of inline ZOQL genration
  [ ] Casting support for required types when the API wants date/datetime/etc
  [ ] Base#has_many should support "#{assoc}=" method for resetting the collection
  [ ] Custom attributes cannot be defined in the WSDL unless it is external to the library. (Implement support via config)
  [ ] Custom default attributes are defined as dirty on instantiation, they should be defaulted but unchanged.
  [ ] Nested objects such as SubscribeRequests do not change new_record/dirty for nested objects.


External Resources
  [ ] Savon should support mapped type definitions via Nori (Base#parse_attributes)
  [ ] Get pull requests accepted for dependencies (currently skiz/wasabi)

Review Notes
  [ ] Invoices dates are procs? / invalid by default
  [ ] Subscription Object spec
  [ ] Tokens should be used for unique identifiers on account names/etc instead of incrementals.
